#!/bin/bash

# Helper script to create EC2 deployment configuration
# This script prompts for EC2 details and creates a deployment script

echo "🔧 EC2 Deployment Configuration Helper"
echo "======================================"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Function to prompt for input with default
prompt_with_default() {
    local prompt="$1"
    local default="$2"
    local var_name="$3"
    
    if [ -n "$default" ]; then
        read -p "$prompt [$default]: " input
        eval "$var_name=\${input:-$default}"
    else
        read -p "$prompt: " input
        eval "$var_name=\"$input\""
    fi
}

echo "📋 Please provide your EC2 instance details:"
echo ""

# Prompt for EC2 details
prompt_with_default "EC2 Public IP Address" "" "EC2_IP"
prompt_with_default "SSH Key file path (.pem)" "" "SSH_KEY"
prompt_with_default "EC2 Username" "ubuntu" "EC2_USER"
prompt_with_default "Repository URL" "https://github.com/yourusername/qagent.git" "REPO_URL"

# Validate inputs
if [ -z "$EC2_IP" ]; then
    print_error "EC2 IP address is required"
    exit 1
fi

if [ -z "$SSH_KEY" ]; then
    print_error "SSH key file path is required"
    exit 1
fi

if [ ! -f "$SSH_KEY" ]; then
    print_error "SSH key file not found: $SSH_KEY"
    exit 1
fi

# Test SSH connection
print_status "Testing SSH connection to EC2..."
if ssh -i "$SSH_KEY" -o ConnectTimeout=10 -o StrictHostKeyChecking=no "$EC2_USER@$EC2_IP" "echo 'SSH connection successful'" 2>/dev/null; then
    print_success "SSH connection successful"
else
    print_error "SSH connection failed. Please check your EC2 details."
    exit 1
fi

# Create deployment script
print_status "Creating deployment script..."
cat > deploy_to_ec2.sh << EOF
#!/bin/bash

# Automated EC2 deployment script
# Generated by create_ec2_deployment.sh

set -e

# EC2 Configuration
EC2_IP="$EC2_IP"
SSH_KEY="$SSH_KEY"
EC2_USER="$EC2_USER"
REPO_URL="$REPO_URL"

echo "🚀 Deploying QA Agent to EC2 instance: \$EC2_IP"

# Colors for output
RED='\\033[0;31m'
GREEN='\\033[0;32m'
YELLOW='\\033[1;33m'
BLUE='\\033[0;34m'
NC='\\033[0m'

print_status() {
    echo -e "\${BLUE}[INFO]\${NC} \$1"
}

print_success() {
    echo -e "\${GREEN}[SUCCESS]\${NC} \$1"
}

print_warning() {
    echo -e "\${YELLOW}[WARNING]\${NC} \$1"
}

print_error() {
    echo -e "\${RED}[ERROR]\${NC} \$1"
}

# Check if SSH key exists
if [ ! -f "\$SSH_KEY" ]; then
    print_error "SSH key file not found: \$SSH_KEY"
    exit 1
fi

# Test SSH connection
print_status "Testing SSH connection..."
if ! ssh -i "\$SSH_KEY" -o ConnectTimeout=10 -o StrictHostKeyChecking=no "\$EC2_USER@\$EC2_IP" "echo 'SSH connection successful'" 2>/dev/null; then
    print_error "SSH connection failed. Please check your EC2 details."
    exit 1
fi

print_success "SSH connection established"

# Copy deployment script to EC2
print_status "Copying deployment script to EC2..."
scp -i "\$SSH_KEY" deploy_multi_ec2.sh "\$EC2_USER@\$EC2_IP:/home/\$EC2_USER/"

# Execute deployment on EC2
print_status "Executing deployment on EC2..."
ssh -i "\$SSH_KEY" "\$EC2_USER@\$EC2_IP" << 'REMOTE_SCRIPT'
    set -e
    
    echo "🚀 Starting deployment on EC2..."
    
    # Make script executable
    chmod +x deploy_multi_ec2.sh
    
    # Run deployment with remote flag
    ./deploy_multi_ec2.sh --remote
    
    echo "✅ Deployment completed on EC2"
    echo ""
    echo "🌐 Access URLs:"
    echo "Port 8000 (Programming/Development): http://\$EC2_IP:8000"
    echo "Port 10000 (DevOps/Infrastructure): http://\$EC2_IP:10000"
    echo ""
    echo "📊 Next steps:"
    echo "1. Edit .env file: nano .env"
    echo "2. Start services: sudo systemctl start qa-agent-multi"
    echo "3. Monitor: ./monitor-multi.sh"
    echo "4. Test: ./test-multi.sh"
REMOTE_SCRIPT

print_success "Deployment completed successfully!"
echo ""
echo "🌐 Your QA Agent instances are now available at:"
echo "Port 8000 (Programming/Development): http://\$EC2_IP:8000"
echo "Port 10000 (DevOps/Infrastructure): http://\$EC2_IP:10000"
echo ""
echo "📊 To monitor your deployment:"
echo "ssh -i \$SSH_KEY \$EC2_USER@\$EC2_IP"
echo "cd /home/\$EC2_USER/qa-agent-multi"
echo "./monitor-multi.sh"
EOF

chmod +x deploy_to_ec2.sh

print_success "Deployment script created: deploy_to_ec2.sh"
echo ""
echo "📋 Configuration Summary:"
echo "EC2 IP: $EC2_IP"
echo "SSH Key: $SSH_KEY"
echo "Username: $EC2_USER"
echo "Repository: $REPO_URL"
echo ""
echo "🚀 To deploy, run:"
echo "./deploy_to_ec2.sh"
echo ""
echo "📝 Note: Make sure your EC2 Security Group allows:"
echo "- Port 22 (SSH)"
echo "- Port 8000 (QA Agent - Programming)"
echo "- Port 10000 (QA Agent - DevOps)" 