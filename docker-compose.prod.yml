version: '3.8'

services:
  qa-agent:
    build: .
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - MAX_RESULTS=${MAX_RESULTS:-10}
      - SEARCH_DEPTH=${SEARCH_DEPTH:-basic}
      - MAX_CONTENT_SIZE=${MAX_CONTENT_SIZE:-10000}
      - MAX_SCRAPE_LENGTH=${MAX_SCRAPE_LENGTH:-20000}
      - LLM_TEMPERATURE=${LLM_TEMPERATURE:-0.1}
      - LLM_MAX_TOKENS=${LLM_MAX_TOKENS:-3000}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-30}
      - LLM_TIMEOUT=${LLM_TIMEOUT:-60}
      - ENABLE_SEARCH_SUMMARIZATION=${ENABLE_SEARCH_SUMMARIZATION:-false}
    volumes:
      - ./sites_data.csv:/app/sites_data.csv:ro
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - qa-agent
    restart: unless-stopped
    profiles:
      - nginx

  # Optional: Redis for session storage (future enhancement)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - redis

volumes:
  redis_data: 